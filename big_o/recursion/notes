Recursion: Is a different way to think about writing a solution
    -Taking one problem and doing it on a smaller piece until you reach an end
    -A FUNCTION THAT CALLS ITSELF-
    -Example json.parge/json.stringify

Call Stack: built in data structre that managaes what happens when a function is invoked
    -When a function is invoked it is placed at the top of the call stack.
    -When JS sees the return keywood or when the function ends, the compiler will remove from the top
    -When we write recursive functions we keep pushing new functions onto the call stack

How recursive functions work
    -invoke the same function with a different input until you reach your base case
    -Base Case is the condition when the Recursion ends
    -Base Case and Different input
        -The different input to check the data you are recursing

Things can go wrong if:
    -There is no base case.
        The call stack will exceed maximum (Stack Overflow)
    -If there is no return, there is no end
    - Can return the wrong number or you forget to return by not changing the code properly